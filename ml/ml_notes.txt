Notes for improvements I have to make in my ML frameworks:

- Make new constructors for `gml::tensor<T>`, `gml::matrix<T>` and `gml::vector<T>` that construct them with the given
  dimensions, but do not default-initialise values, as this is expensive and should only be performed if necessary
- Add more activation functions
- Add more loss functions
- I should have a separate program which loads a .nnw file and a .normv and tests it on data (perhaps one .3bod file, on all possible pairs, or perhaps same time window and shifting the window across the file)
- Allow lookup of loss functions by ID, as you've done with the activation functions (using a static `std::map`)
- Include signal handling in nn.cpp
